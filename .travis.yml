# The first thing is to tell which VM environment we want the test to be run on.
# It dosen't quite matter for Haxe, just choose one of the targets our project support (e.g. PHP),
# and than apt-get install the others (e.g. Neko, C++).
# For more info, see http://about.travis-ci.org/docs/user/ci-environment/
language: python

# Install Haxe before running the test.
before_script:
  - sudo apt-get update  > /dev/null                               # run update before installing anything
  - sudo apt-get install python-software-properties -y > /dev/null # for the next command
  - sudo add-apt-repository ppa:eyecreate/haxe -y > /dev/null      # add the ubuntu ppa that contains haxe
  - sudo apt-get update > /dev/null                                # pull info from ppa
  - sudo apt-get install haxe -y > /dev/null                       # install haxe (and neko)
#  - sudo apt-get install gcc-multilib g++-multilib -y  # VM is 64bit but hxcpp builds 32bit
  - mkdir ~/haxelib > /dev/null                                    # create a folder for installing haxelib
  - haxelib setup ~/haxelib > /dev/null
#  - haxelib install hxcpp                              # install hxcpp to test C++ target
  - haxelib install nme > /dev/null
#  - haxelib install munit > /dev/null
  - haxelib install lime > /dev/null
  - haxelib install openfl > /dev/null
  - haxelib install actuate > /dev/null
#  - haxelib install hamcrest > /dev/null
  - haxelib install buddy > /dev/null
  - haxelib install thx.semver > /dev/null
  - haxelib install compiletime > /dev/null
  - mkdir behaviour-build > /dev/null                                          # create an output folder if needed

# Run the test!
script:
  - haxe behaviour.hxml
  - neko behaviour-build/behaviour.n